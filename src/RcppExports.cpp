// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// MatMult
arma::mat MatMult(arma::mat A, arma::mat B);
RcppExport SEXP _MAGEIT_MatMult(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(MatMult(A, B));
    return rcpp_result_gen;
END_RCPP
}
// acc
double acc(arma::mat A);
RcppExport SEXP _MAGEIT_acc(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(acc(A));
    return rcpp_result_gen;
END_RCPP
}
// eigen_posi
arma::vec eigen_posi(arma::mat GM, arma::mat H);
RcppExport SEXP _MAGEIT_eigen_posi(SEXP GMSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type GM(GMSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(eigen_posi(GM, H));
    return rcpp_result_gen;
END_RCPP
}
// MultiTrace
double MultiTrace(arma::mat Gc, arma::mat Sc);
RcppExport SEXP _MAGEIT_MultiTrace(SEXP GcSEXP, SEXP ScSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    rcpp_result_gen = Rcpp::wrap(MultiTrace(Gc, Sc));
    return rcpp_result_gen;
END_RCPP
}
// MatInv
arma::mat MatInv(arma::mat A);
RcppExport SEXP _MAGEIT_MatInv(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(MatInv(A));
    return rcpp_result_gen;
END_RCPP
}
// comeigen_sys
arma:: vec comeigen_sys(arma::mat& M);
RcppExport SEXP _MAGEIT_comeigen_sys(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(comeigen_sys(M));
    return rcpp_result_gen;
END_RCPP
}
// Compute5PCs
arma::mat Compute5PCs(arma::mat X, int top);
RcppExport SEXP _MAGEIT_Compute5PCs(SEXP XSEXP, SEXP topSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type top(topSEXP);
    rcpp_result_gen = Rcpp::wrap(Compute5PCs(X, top));
    return rcpp_result_gen;
END_RCPP
}
// ComputePCs
arma::mat ComputePCs(arma::mat X, int top);
RcppExport SEXP _MAGEIT_ComputePCs(SEXP XSEXP, SEXP topSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type top(topSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputePCs(X, top));
    return rcpp_result_gen;
END_RCPP
}
// comeigen_fixed_Gfix
arma:: vec comeigen_fixed_Gfix(arma:: mat& S, arma::vec& q, arma::mat& Sc, arma::mat& M);
RcppExport SEXP _MAGEIT_comeigen_fixed_Gfix(SEXP SSEXP, SEXP qSEXP, SEXP ScSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma:: mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(comeigen_fixed_Gfix(S, q, Sc, M));
    return rcpp_result_gen;
END_RCPP
}
// comeigen_burden
arma:: vec comeigen_burden(arma:: mat& S, arma::vec& q, arma::mat& Sc, arma::mat& M);
RcppExport SEXP _MAGEIT_comeigen_burden(SEXP SSEXP, SEXP qSEXP, SEXP ScSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma:: mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(comeigen_burden(S, q, Sc, M));
    return rcpp_result_gen;
END_RCPP
}
// comeigen
arma:: cx_vec comeigen(arma::mat HM);
RcppExport SEXP _MAGEIT_comeigen(SEXP HMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type HM(HMSEXP);
    rcpp_result_gen = Rcpp::wrap(comeigen(HM));
    return rcpp_result_gen;
END_RCPP
}
// comeigen_fixed
arma:: vec comeigen_fixed(arma:: mat& S, arma::vec& q, arma::mat& Gc, arma::mat& Sc, arma::mat& M);
RcppExport SEXP _MAGEIT_comeigen_fixed(SEXP SSEXP, SEXP qSEXP, SEXP GcSEXP, SEXP ScSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma:: mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(comeigen_fixed(S, q, Gc, Sc, M));
    return rcpp_result_gen;
END_RCPP
}
// GetLinearKernel
arma::mat GetLinearKernel(arma::mat G);
RcppExport SEXP _MAGEIT_GetLinearKernel(SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(GetLinearKernel(G));
    return rcpp_result_gen;
END_RCPP
}
// GetLinearKernel_weight
arma::mat GetLinearKernel_weight(arma::mat G, arma::mat W);
RcppExport SEXP _MAGEIT_GetLinearKernel_weight(SEXP GSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(GetLinearKernel_weight(G, W));
    return rcpp_result_gen;
END_RCPP
}
// CovComb
arma:: mat CovComb(arma:: vec X1, arma::vec X2);
RcppExport SEXP _MAGEIT_CovComb(SEXP X1SEXP, SEXP X2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma:: vec >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X2(X2SEXP);
    rcpp_result_gen = Rcpp::wrap(CovComb(X1, X2));
    return rcpp_result_gen;
END_RCPP
}
// mat_inv_3
arma:: mat mat_inv_3(arma::mat S);
RcppExport SEXP _MAGEIT_mat_inv_3(SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(mat_inv_3(S));
    return rcpp_result_gen;
END_RCPP
}
// GetS_est_Gfix
arma::mat GetS_est_Gfix(arma::mat Sc, arma::mat M);
RcppExport SEXP _MAGEIT_GetS_est_Gfix(SEXP ScSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(GetS_est_Gfix(Sc, M));
    return rcpp_result_gen;
END_RCPP
}
// GetS_est
arma::mat GetS_est(arma::mat Gc, arma::mat Sc, arma::mat M, int m);
RcppExport SEXP _MAGEIT_GetS_est(SEXP GcSEXP, SEXP ScSEXP, SEXP MSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(GetS_est(Gc, Sc, M, m));
    return rcpp_result_gen;
END_RCPP
}
// GetS_est4
arma::mat GetS_est4(arma::mat Gc, arma::mat Sc, arma::mat M, arma::mat Uc);
RcppExport SEXP _MAGEIT_GetS_est4(SEXP GcSEXP, SEXP ScSEXP, SEXP MSEXP, SEXP UcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Uc(UcSEXP);
    rcpp_result_gen = Rcpp::wrap(GetS_est4(Gc, Sc, M, Uc));
    return rcpp_result_gen;
END_RCPP
}
// GetQ_est_Gfix
arma::mat GetQ_est_Gfix(arma::mat Sc, arma::mat M, arma::vec yc);
RcppExport SEXP _MAGEIT_GetQ_est_Gfix(SEXP ScSEXP, SEXP MSEXP, SEXP ycSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yc(ycSEXP);
    rcpp_result_gen = Rcpp::wrap(GetQ_est_Gfix(Sc, M, yc));
    return rcpp_result_gen;
END_RCPP
}
// GetQ_est
arma::mat GetQ_est(arma::mat Gc, arma::mat Sc, arma::mat M, arma::vec yc);
RcppExport SEXP _MAGEIT_GetQ_est(SEXP GcSEXP, SEXP ScSEXP, SEXP MSEXP, SEXP ycSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yc(ycSEXP);
    rcpp_result_gen = Rcpp::wrap(GetQ_est(Gc, Sc, M, yc));
    return rcpp_result_gen;
END_RCPP
}
// GetQ_est4
arma::mat GetQ_est4(arma::mat Gc, arma::mat Sc, arma::mat Uc, arma::mat M, arma::vec yc);
RcppExport SEXP _MAGEIT_GetQ_est4(SEXP GcSEXP, SEXP ScSEXP, SEXP UcSEXP, SEXP MSEXP, SEXP ycSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Uc(UcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yc(ycSEXP);
    rcpp_result_gen = Rcpp::wrap(GetQ_est4(Gc, Sc, Uc, M, yc));
    return rcpp_result_gen;
END_RCPP
}
// ComputeProj_Gfix
arma::mat ComputeProj_Gfix(arma::vec X1, arma::vec X2, arma::vec E, arma::mat Gc);
RcppExport SEXP _MAGEIT_ComputeProj_Gfix(SEXP X1SEXP, SEXP X2SEXP, SEXP ESEXP, SEXP GcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeProj_Gfix(X1, X2, E, Gc));
    return rcpp_result_gen;
END_RCPP
}
// ComputeProj_Gfixx
arma::mat ComputeProj_Gfixx(arma::mat X, arma::vec E, arma::mat Gc);
RcppExport SEXP _MAGEIT_ComputeProj_Gfixx(SEXP XSEXP, SEXP ESEXP, SEXP GcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeProj_Gfixx(X, E, Gc));
    return rcpp_result_gen;
END_RCPP
}
// ComputeProjxx
arma::mat ComputeProjxx(arma::mat X, arma::vec E);
RcppExport SEXP _MAGEIT_ComputeProjxx(SEXP XSEXP, SEXP ESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type E(ESEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeProjxx(X, E));
    return rcpp_result_gen;
END_RCPP
}
// ComputeProj
arma::mat ComputeProj(arma::vec X1, arma::vec X2, arma::vec E);
RcppExport SEXP _MAGEIT_ComputeProj(SEXP X1SEXP, SEXP X2SEXP, SEXP ESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type E(ESEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeProj(X1, X2, E));
    return rcpp_result_gen;
END_RCPP
}
// ComputeProj_randomX
arma::mat ComputeProj_randomX(arma:: vec E);
RcppExport SEXP _MAGEIT_ComputeProj_randomX(SEXP ESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma:: vec >::type E(ESEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeProj_randomX(E));
    return rcpp_result_gen;
END_RCPP
}
// ComputeDelta
arma::vec ComputeDelta(arma::mat S, arma::vec q);
RcppExport SEXP _MAGEIT_ComputeDelta(SEXP SSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeDelta(S, q));
    return rcpp_result_gen;
END_RCPP
}
// Standard
arma::mat Standard(arma::mat S);
RcppExport SEXP _MAGEIT_Standard(SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(Standard(S));
    return rcpp_result_gen;
END_RCPP
}
// Standard_vec
arma::mat Standard_vec(arma::vec S);
RcppExport SEXP _MAGEIT_Standard_vec(SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(Standard_vec(S));
    return rcpp_result_gen;
END_RCPP
}
// Center
arma::mat Center(arma::mat S);
RcppExport SEXP _MAGEIT_Center(SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(Center(S));
    return rcpp_result_gen;
END_RCPP
}
// Sigma_mapit
arma:: mat Sigma_mapit(arma::mat S, arma::vec yc, arma::vec delta, arma::mat Gc, arma::mat Sc, arma::mat M);
RcppExport SEXP _MAGEIT_Sigma_mapit(SEXP SSEXP, SEXP ycSEXP, SEXP deltaSEXP, SEXP GcSEXP, SEXP ScSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(Sigma_mapit(S, yc, delta, Gc, Sc, M));
    return rcpp_result_gen;
END_RCPP
}
// Sigma_mapit_rancov
arma:: mat Sigma_mapit_rancov(arma::mat S, arma::vec yc, arma::vec delta, arma::mat Gc, arma::mat Sc, arma::mat Uc, arma::mat M);
RcppExport SEXP _MAGEIT_Sigma_mapit_rancov(SEXP SSEXP, SEXP ycSEXP, SEXP deltaSEXP, SEXP GcSEXP, SEXP ScSEXP, SEXP UcSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Uc(UcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(Sigma_mapit_rancov(S, yc, delta, Gc, Sc, Uc, M));
    return rcpp_result_gen;
END_RCPP
}
// eig_null
arma:: vec eig_null(arma:: mat S, arma::vec q, arma::mat Gc, arma::mat Sc, arma::mat M);
RcppExport SEXP _MAGEIT_eig_null(SEXP SSEXP, SEXP qSEXP, SEXP GcSEXP, SEXP ScSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma:: mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gc(GcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sc(ScSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(eig_null(S, q, Gc, Sc, M));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MAGEIT_MatMult", (DL_FUNC) &_MAGEIT_MatMult, 2},
    {"_MAGEIT_acc", (DL_FUNC) &_MAGEIT_acc, 1},
    {"_MAGEIT_eigen_posi", (DL_FUNC) &_MAGEIT_eigen_posi, 2},
    {"_MAGEIT_MultiTrace", (DL_FUNC) &_MAGEIT_MultiTrace, 2},
    {"_MAGEIT_MatInv", (DL_FUNC) &_MAGEIT_MatInv, 1},
    {"_MAGEIT_comeigen_sys", (DL_FUNC) &_MAGEIT_comeigen_sys, 1},
    {"_MAGEIT_Compute5PCs", (DL_FUNC) &_MAGEIT_Compute5PCs, 2},
    {"_MAGEIT_ComputePCs", (DL_FUNC) &_MAGEIT_ComputePCs, 2},
    {"_MAGEIT_comeigen_fixed_Gfix", (DL_FUNC) &_MAGEIT_comeigen_fixed_Gfix, 4},
    {"_MAGEIT_comeigen_burden", (DL_FUNC) &_MAGEIT_comeigen_burden, 4},
    {"_MAGEIT_comeigen", (DL_FUNC) &_MAGEIT_comeigen, 1},
    {"_MAGEIT_comeigen_fixed", (DL_FUNC) &_MAGEIT_comeigen_fixed, 5},
    {"_MAGEIT_GetLinearKernel", (DL_FUNC) &_MAGEIT_GetLinearKernel, 1},
    {"_MAGEIT_GetLinearKernel_weight", (DL_FUNC) &_MAGEIT_GetLinearKernel_weight, 2},
    {"_MAGEIT_CovComb", (DL_FUNC) &_MAGEIT_CovComb, 2},
    {"_MAGEIT_mat_inv_3", (DL_FUNC) &_MAGEIT_mat_inv_3, 1},
    {"_MAGEIT_GetS_est_Gfix", (DL_FUNC) &_MAGEIT_GetS_est_Gfix, 2},
    {"_MAGEIT_GetS_est", (DL_FUNC) &_MAGEIT_GetS_est, 4},
    {"_MAGEIT_GetS_est4", (DL_FUNC) &_MAGEIT_GetS_est4, 4},
    {"_MAGEIT_GetQ_est_Gfix", (DL_FUNC) &_MAGEIT_GetQ_est_Gfix, 3},
    {"_MAGEIT_GetQ_est", (DL_FUNC) &_MAGEIT_GetQ_est, 4},
    {"_MAGEIT_GetQ_est4", (DL_FUNC) &_MAGEIT_GetQ_est4, 5},
    {"_MAGEIT_ComputeProj_Gfix", (DL_FUNC) &_MAGEIT_ComputeProj_Gfix, 4},
    {"_MAGEIT_ComputeProj_Gfixx", (DL_FUNC) &_MAGEIT_ComputeProj_Gfixx, 3},
    {"_MAGEIT_ComputeProjxx", (DL_FUNC) &_MAGEIT_ComputeProjxx, 2},
    {"_MAGEIT_ComputeProj", (DL_FUNC) &_MAGEIT_ComputeProj, 3},
    {"_MAGEIT_ComputeProj_randomX", (DL_FUNC) &_MAGEIT_ComputeProj_randomX, 1},
    {"_MAGEIT_ComputeDelta", (DL_FUNC) &_MAGEIT_ComputeDelta, 2},
    {"_MAGEIT_Standard", (DL_FUNC) &_MAGEIT_Standard, 1},
    {"_MAGEIT_Standard_vec", (DL_FUNC) &_MAGEIT_Standard_vec, 1},
    {"_MAGEIT_Center", (DL_FUNC) &_MAGEIT_Center, 1},
    {"_MAGEIT_Sigma_mapit", (DL_FUNC) &_MAGEIT_Sigma_mapit, 6},
    {"_MAGEIT_Sigma_mapit_rancov", (DL_FUNC) &_MAGEIT_Sigma_mapit_rancov, 7},
    {"_MAGEIT_eig_null", (DL_FUNC) &_MAGEIT_eig_null, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_MAGEIT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
